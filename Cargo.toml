[package]
name = "rotonda"
version = "0.0.1-dev"
rust-version = "1.65"
authors = ["NLnet Labs <routing-team@nlnetlabs.nl>"]
edition = "2021"
description = "A modular analytical BGP Engine"
repository = "https://github.com/NLnetLabs/rotonda/"
keywords = ["routing", "bgp"]
categories = ["network-programming"]
license = "MPL-2.0"
exclude = [ ".github" ]

[dependencies]
arc-swap           = "^1.6"
chrono             = "^0.4"
clap               = { version = "^4.4", features = ["cargo"] }
crossbeam-utils    = "^0.8"
fern               = "^0.6"
futures            = "^0.3"
hyper              = { version = "^0.14", features = ["server", "stream"] }
log                = "^0.4"
log-reroute        = "^0.1"
pin-project-lite   = "^0.2"
rand               = "^0.8"
reqwest            = { version = "^0.11", default-features = false }
routecore          = { version = "^0.4.0-dev", features = ["bgp", "bmp", "serde"], git = "https://github.com/NLnetLabs/routecore.git", branch = "compose-messages-ng" }
rotonda-fsm        = { version = "^0.1.0-dev", git = "https://github.com/NLnetLabs/rotonda-fsm.git" }
sanitise-file-name = "^1.0"
serde              = { version = "^1.0", features = ["derive", "rc"] }
serde_json         = { version = "^1.0", features = ["preserve_order"] }
slab               = "^0.4"
tokio              = { version = "^1.33", features = ["fs", "io-util", "macros", "net", "rt", "rt-multi-thread", "signal", "sync", "test-util", "time", "tracing"] }
toml               = "^0.8"
url                = { version = "^2.4", features = ["serde"] }

# Dependencies specifically used by the BGP/BMP related modifications to the original RTRTR base
allocator-api2     = "^0.2"
assert-json-diff   = "^2.0"
async-trait        = "^0.1"
atomic_enum        = "^0.2.0"
flate2             = { version = "^1.0", optional = true }
anyhow             = "^1.0"
bytes              = { version = "1.5.0" }
const_format       = "^0.2"
hex-slice          = "^0.1"
hash_hasher        = "^2.0"
hashbrown          = "^0.14"
html-escape        = { version = "^0.2" }
indoc              = "^2.0"
layout-rs          = { version = "^0.1" }
mqtt               = { version = "^0.23.0", package = "rumqttc", default-features = false }
non-empty-vec      = { version = "^0.2", features = ["serde"]}
percent-encoding   = "^2.3"
roto               = { version = "^0.1.0", git = "https://github.com/NLnetLabs/roto.git", branch = "compose-messages-ng" }
# roto               = { path = "../roto" }
rotonda-store      = { version = "^0.3.0-pre.3", git = "https://github.com/NLnetLabs/rotonda-store.git", branch = "compose-messages-ng" }
# rotonda-store      = { path = "../rotonda-store" }
serde_with         = "^3"
smallvec           = { version = "^1.11", features = ["const_generics", "const_new", "union"] }
tokio-metrics      = { version = "^0.3", default-features = false }
uuid               = { version = "^1.4", features = ["v4", "fast-rng"] }

[target.'cfg(unix)'.dependencies]
syslog             = "^6.1"

[dev-dependencies]
hex                = "^0.4"
env_logger         = "^0.10"
prometheus-parse   = "^0.2"
reqwest            = { version = "^0.11", default-features = false, features = ["json"] }
rumqttd            = { version = "^0.18.0", default-features = false }
serde_json         = "^1.0"

[profile.release]
strip = true

[features]
default = ["http-api-gzip"]

# Enable GZIP compression of the HTTP /metrics response
http-api-gzip = ["flate2"]

[package.metadata.deb]
name = "rotonda"
maintainer = "NLnet Labs <routing-team@nlnetlabs.nl>"
license-file = ["LICENSE", "0"]
extended-description = """\
Roll your own BGP applications with programmable RIBs and Filters.
BGP applications that you can build with Rotonda include, but are
not limited to, a route monitor|collector|server|reflector, all
this without modifying a single line in the source code of Rotonda."""
# ensure that the useradd tools are present by installing their respective packages
depends = "$auto, passwd"
section = "net"
priority = "optional"
assets = [
    ["target/release/rotonda", "usr/bin/", "755"],
    ["README.md", "usr/share/doc/rotonda/", "644"],
    ["doc/rotonda.1", "usr/share/man/man1/rotonda.1", "644"],
    ["etc/rotonda.conf.system-service", "etc/rotonda/rotonda.conf", "644"],
    ["etc/bgp-in-filter.roto", "etc/rotonda/filters/bgp-in-filter.roto", "644"],
    ["etc/bmp-in-filter.roto", "etc/rotonda/filters/bmp-in-filter.roto", "644"],
    ["etc/rib-in-post-filter.roto", "etc/rotonda/filters/rib-in-post-filter.roto", "644"],
    ["etc/rib-in-pre-filter.roto", "etc/rotonda/filters/rib-in-pre-filter.roto", "644"]
]
maintainer-scripts = "pkg/debian"
changelog = "target/debian/changelog" # this will be generated by the pkg workflow
copyright = "Copyright (c) 2023, NLnet Labs. All rights reserved."
conf-files = [
    "/etc/rotonda/rotonda.conf",
    "/etc/rotonda/filters/bgp-in-filter.roto",
    "/etc/rotonda/filters/bmp-in-filter.roto",
    "/etc/rotonda/filters/rib-in-post-filter.roto",
    "/etc/rotonda/filters/rib-in-pre-filter.roto"
]
systemd-units = { unit-name = "rotonda", unit-scripts = "pkg/common", enable = false }

[package.metadata.deb.variants.minimal]

[package.metadata.generate-rpm]
# "BSD" alone is the 3-clause license. Inheriting "license" from above causes rpmlint to
# complain with "invalid-license".
# See: https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing
license = "BSD"
assets = [
    { source = "target/release/rotonda", dest = "/usr/bin/rotonda", mode = "755" },
    { source = "target/rpm/rotonda.service", dest = "/lib/systemd/system/rotonda.service", mode = "644" },
    { source = "doc/rotonda.1", dest = "/usr/share/man/man1/rotonda.1", mode = "644", doc = true },
    { source = "etc/rotonda.conf.system-service", dest = "/etc/rotonda/rotonda.conf", mode = "644", config = true },
    { source = "etc/bgp-in-filter.roto", dest = "/etc/rotonda/filters/bgp-in-filter.roto", mode = "644", config = true },
    { source = "etc/bmp-in-filter.roto", dest = "/etc/rotonda/filters/bmp-in-filter.roto", mode = "644", config = true },
    { source = "etc/rib-in-post-filter.roto", dest = "/etc/rotonda/filters/rib-in-post-filter.roto", mode = "644", config = true },
    { source = "etc/rib-in-pre-filter.roto", dest = "/etc/rotonda/filters/rib-in-pre-filter.roto", mode = "644", config = true }
]
# These get set using cargo-generate-rpm --set-metadata at package build time.
#post_install_script = ...
#pre_uninstall_script = ...
#post_uninstall_script = ...

# ensure that the useradd tools are present by installing their respective packages
[package.metadata.generate-rpm.requires]
shadow-utils = "*"
