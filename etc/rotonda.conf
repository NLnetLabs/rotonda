# Rotonda Configuration
#
# This is an example Rotonda configuration file. It is in TOML format.
# This file has 2 sections: Global settings and Component definitions.
#
# Read more about this configuration format here:
# https://rotonda.readthedocs.io/en/latest/config/


### 1. Global Settings

log_level = "info"           # "error", "warn", "info", "debug" or "trace"
log_target = "stderr"        # "stderr", "file" or "syslog"
# log_facility = "daemon"    # used if log_target is "syslog"
# log_file = "./rotonda.log" # used if log_target is "file"

# the path to the file that holds all Roto filters. When specified as a
# relative path, this is relative to the working directory of the Rotonda
# application binary.
# roto_script = "filters.roto"

http_listen = ["[::]:8080"]


### 2. Component Definitions

## BMP

[units.bmp-in]
type = "bmp-tcp-in"
listen = "0.0.0.0:11019"

## BGP

# [units.bgp-in]
# type = "bgp-tcp-in"
# listen = "10.1.0.254:179"
# my_asn = 64512
# my_bgp_id = [10,1,0,254]

# [units.bgp-in.peers."10.1.0.1"]
# name = "PeerA"
# remote_asn = []
# protocols = ["Ipv4Unicast", "Ipv4Multicast", "Ipv6Unicast"]

# [units.bgp-in.peers."10.1.0.2"]
# name = "PeerB"
# remote_asn = []
# protocols = ["Ipv4Unicast", "Ipv6Unicast"]

## MRT

# [units.mrt-in]
# type = "mrt-file-in"
# filename = ["path/to/bview.mrt", "path/to/update1.mrt", ..]
# update_path = "path/to/updates"

## RTR

# [units.rtr]
# type = "rtr-tcp-in"
# remote = "[::1]:3323"
# retry = 60 # retry delay in seconds, default 60
#
# # In case of compatibility issues between Rotonda and the cache in use, force
# # the initial (and thus maximum) version. Defaults to version 2. Note that
# # some types of RPKI objects are not available in earlier versions of the
# # protocol (e.g. ASPA).
# initial_version = 2

## RIB

[units.rib]
type = "rib"
# When enabling the RTR unit above, make sure it's listed as a source for this
# rib unit, e.g.:
# sources = ["bmp-in", "rtr"]
sources = ["bmp-in"]

## Null Target

[targets.null]
type = "null-out"
sources = ["rib"]

## File out Target

#[targets.logfile]
#type = "file-out"
#sources = "bmp-in"
#format = "json"                   # "json", "json-min", "csv"
#filename = "/tmp/rotonda.csv"

## MQTT Target

# [targets.mqtt]
# type = "mqtt-out"
# sources = ["bmp-in", "bgp-in", "rib"]
# destination = "localhost"
# client_id = "rotonda"
